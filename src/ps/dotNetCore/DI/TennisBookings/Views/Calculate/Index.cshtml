@using Microsoft.Extensions.Options
@using TennisBookings.Configuration
@model TennisBookings.Models.CalculateViewModel

@{
    ViewData["Title"] = "Index";
}
@inject IOptions<PersonConfiguration> Person


<h2>Index</h2>

<h4>CalculateViewModel</h4>
<hr />

@if (Person.Value.IsEnable)
{
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="@Person.Value.Name" class="control-label"></label>
                <input asp-for="@Person.Value.Name" class="form-control" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <label asp-for="@Person.Value.Age" class="control-label"></label>
                <input asp-for="@Person.Value.Age" class="form-control" />
            </div>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-4">
        <form asp-action="Index">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Number" class="control-label"></label>
                <input asp-for="Number" class="form-control" />
                <span asp-validation-for="Number" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
